#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü—É players.
"""

import sqlite3
import os

def migrate_database():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü—É players."""
    db_path = "instance/app.db"
    
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–Ω–∞—á–∞–ª–∞.")
        return False
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —É–∂–µ —Å—Ç–æ–ª–±—Ü—ã
        cursor.execute("PRAGMA table_info(players)")
        columns = [column[1] for column in cursor.fetchall()]
        
        if 'is_blocked' in columns:
            print("‚úÖ –°—Ç–æ–ª–±—Ü—ã –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç.")
            conn.close()
            return True
        
        print("üîÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü—É players...")
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±—Ü—ã
        cursor.execute("ALTER TABLE players ADD COLUMN is_blocked INTEGER DEFAULT 0")
        cursor.execute("ALTER TABLE players ADD COLUMN blocked_reason TEXT")
        
        conn.commit()
        
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("   - –î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü is_blocked (INTEGER, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 0)")
        print("   - –î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü blocked_reason (TEXT, –º–æ–∂–µ—Ç –±—ã—Ç—å NULL)")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cursor.execute("SELECT COUNT(*) FROM players")
        player_count = cursor.fetchone()[0]
        print(f"üìä –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –∏–≥—Ä–æ–∫–æ–≤: {player_count}")
        
        conn.close()
        return True
        
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ SQLite: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üóÑÔ∏è  –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏...\n")
    
    success = migrate_database()
    
    if success:
        print(f"\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.")
    else:
        print(f"\nüí• –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")