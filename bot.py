import os
from dotenv import load_dotenv
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from telegram.ext import Application, CommandHandler, ContextTypes

load_dotenv()
BOT_TOKEN  = os.getenv("BOT_TOKEN", "").strip()
WEBAPP_URL = os.getenv("WEBAPP_URL", "").strip()

if not BOT_TOKEN or not WEBAPP_URL:
    raise RuntimeError("BOT_TOKEN –∏/–∏–ª–∏ WEBAPP_URL –Ω–µ –∑–∞–¥–∞–Ω—ã –≤ .env")

# –¢–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
WELCOME = (
    "–ü—Ä–∏–≤–µ—Ç! üëã\n"
    "–≠—Ç–æ –º–∏–Ω–∏-—Ñ–µ—Ä–º–∞. –û—Ç–∫—Ä–æ–π –µ—ë –≤–Ω—É—Ç—Ä–∏ Telegram WebApp.\n\n"
    "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚Äî ¬´–û—Ç–∫—Ä—ã—Ç—å —Ñ–µ—Ä–º—É¬ª."
)

def webapp_keyboard_inline():
    # –ò–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞ –Ω–∞–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    kb = InlineKeyboardMarkup([
        [InlineKeyboardButton(text="üåæ –û—Ç–∫—Ä—ã—Ç—å —Ñ–µ—Ä–º—É", web_app=WebAppInfo(url=WEBAPP_URL))]
    ])
    return kb

async def cmd_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        WELCOME,
        reply_markup=webapp_keyboard_inline()
    )

def main():
    application = Application.builder().token(BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", cmd_start))
    print("Bot polling started. Press Ctrl+C to stop.")
    application.run_polling()

if __name__ == "__main__":
    main()
